body {
  max-width: 1000px;
  margin: auto;
}

#levels {
  display: grid;
  row-gap: 20px;
}

.level-description {
  width: 100%;
  height: 120px;
  margin-bottom: 20px;
  border: 3px solid #000;
  border-radius: 10px;
  display: grid;
  grid-template-columns: 180px auto auto;
  grid-template-rows: 50% 50%;
  grid-auto-flow: row;
  row-gap: 3px;
  padding-bottom: 3px;
  column-gap: 3px;
  background-color: #000;
  overflow: hidden;
  text-align: left;
}

.level-description-cell {
  background-color: #fff;
  padding: 2px 4px;
  vertical-align: middle;
  display:inline-block;
  position: relative;
}

.level-description-cell::before {
  font-size: 16px;
  color: #888;
  font-style: italic;
}

.level-description-preview {
  background-color: #ddd;
  grid-row: 1 / span 2;
  padding: 6px;
}

.level-description-preview-unknown::before {
  content: "?";
  font-style: normal;
  color: #000;
  width: 100%;
  height: 100%;
  font-size: 110px;
  position: absolute;
  text-align: center;
  top: -5px; /* Question mark is a bit too low */
  left: 0;
  text-shadow: 0 0 8px #000;
}

#level-description-preview {
  display: block;
  height: calc(100% - 4px);
  /* width: calc(100% - 4px); To keep img in container, doesn't work with borders / box shadows */
  margin: auto;
  border: 2px solid #000;
  border-radius: 6px;
  box-shadow: #000 0 0 8px;
  image-rendering: pixelated;
  object-fit: contain;
}

.level-description-title::before {
  content: "Title";
}

.level-description-location::before {
  content: "Location";
}

.level-description-size::before {
  content: "Size";
}

.level-description-time::before {
  content: "Time";
}

.level-description-content {
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-right: -50%;
  transform: translate(-50%, -50%);
  font-size: 20px;
}

/* https://spin.atomicobject.com/2015/07/14/css-responsive-square/ */

.level-cell {
  width: calc(100% - 26px); /* row-gap + (2 * border-width) */
  border: 3px solid #000;
  border-radius: 10px;
  margin: auto;
  position: relative;
}

/* Makes cell a square */
.level-cell::after {
  content: "";
  display: block;
  padding-bottom: 100%;
}

.level-cell-content {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #fff;
  border-radius: 10px;
}

.level-cell-selected::before {
  content: "";
  display: block;
  position: absolute;
  height: calc(100% + 12px);
  width: calc(100% + 12px);
  top: -6px;
  left: -6px;
  background-color: #11f;
  border-radius: 16px;
}
